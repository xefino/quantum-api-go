// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: protos/frontend/data/quote.proto

package data

import (
	gopb "github.com/xefino/protobuf-gen-go/gopb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes a single quote for a given asset
type Quote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AskExchange          int32                             `protobuf:"varint,4,opt,name=ask_exchange,json=askExchange,proto3" json:"ask_exchange,omitempty"`
	AskPrice             *gopb.Decimal                     `protobuf:"bytes,5,opt,name=ask_price,json=askPrice,proto3" json:"ask_price"` 
	AskSize              int64                             `protobuf:"varint,6,opt,name=ask_size,json=askSize,proto3" json:"ask_size,omitempty"`
	BidExchange          int32                             `protobuf:"varint,7,opt,name=bid_exchange,json=bidExchange,proto3" json:"bid_exchange,omitempty"`
	BidPrice             *gopb.Decimal                     `protobuf:"bytes,8,opt,name=bid_price,json=bidPrice,proto3" json:"bid_price"` 
	BidSize              int64                             `protobuf:"varint,9,opt,name=bid_size,json=bidSize,proto3" json:"bid_size,omitempty"`
	Tape                 gopb.Financial_Common_Tape        `protobuf:"varint,10,opt,name=tape,proto3,enum=protos.common.Financial_Common_Tape" json:"tape"` 
	SequenceNumber       int64                             `protobuf:"varint,11,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Conditions           []gopb.Financial_Quotes_Condition `protobuf:"varint,12,rep,packed,name=conditions,proto3,enum=protos.common.Financial_Quotes_Condition" json:"conditions"` 
	Indicators           []gopb.Financial_Quotes_Indicator `protobuf:"varint,13,rep,packed,name=indicators,proto3,enum=protos.common.Financial_Quotes_Indicator" json:"indicators"` 
	ParticipantTimestamp *gopb.UnixTimestamp               `protobuf:"bytes,14,opt,name=participant_timestamp,json=participantTimestamp,proto3" json:"participant_timestamp"` 
	SipTimestamp         *gopb.UnixTimestamp               `protobuf:"bytes,15,opt,name=sip_timestamp,json=sipTimestamp,proto3" json:"sip_timestamp"` 
	TrfTimestamp         *gopb.UnixTimestamp               `protobuf:"bytes,16,opt,name=trf_timestamp,json=trfTimestamp,proto3" json:"trf_timestamp"` 
}

func (x *Quote) Reset() {
	*x = Quote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_frontend_data_quote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_protos_frontend_data_quote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quote.ProtoReflect.Descriptor instead.
func (*Quote) Descriptor() ([]byte, []int) {
	return file_protos_frontend_data_quote_proto_rawDescGZIP(), []int{0}
}

func (x *Quote) GetAskExchange() int32 {
	if x != nil {
		return x.AskExchange
	}
	return 0
}

func (x *Quote) GetAskPrice() *gopb.Decimal {
	if x != nil {
		return x.AskPrice
	}
	return nil
}

func (x *Quote) GetAskSize() int64 {
	if x != nil {
		return x.AskSize
	}
	return 0
}

func (x *Quote) GetBidExchange() int32 {
	if x != nil {
		return x.BidExchange
	}
	return 0
}

func (x *Quote) GetBidPrice() *gopb.Decimal {
	if x != nil {
		return x.BidPrice
	}
	return nil
}

func (x *Quote) GetBidSize() int64 {
	if x != nil {
		return x.BidSize
	}
	return 0
}

func (x *Quote) GetTape() gopb.Financial_Common_Tape {
	if x != nil {
		return x.Tape
	}
	return gopb.Financial_Common_Tape(0)
}

func (x *Quote) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *Quote) GetConditions() []gopb.Financial_Quotes_Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Quote) GetIndicators() []gopb.Financial_Quotes_Indicator {
	if x != nil {
		return x.Indicators
	}
	return nil
}

func (x *Quote) GetParticipantTimestamp() *gopb.UnixTimestamp {
	if x != nil {
		return x.ParticipantTimestamp
	}
	return nil
}

func (x *Quote) GetSipTimestamp() *gopb.UnixTimestamp {
	if x != nil {
		return x.SipTimestamp
	}
	return nil
}

func (x *Quote) GetTrfTimestamp() *gopb.UnixTimestamp {
	if x != nil {
		return x.TrfTimestamp
	}
	return nil
}

var File_protos_frontend_data_quote_proto protoreflect.FileDescriptor

var file_protos_frontend_data_quote_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf,
	0x05, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x73, 0x6b, 0x5f,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x61, 0x73, 0x6b, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x61,
	0x73, 0x6b, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x08, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x61, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x69, 0x64, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x62, 0x69, 0x64, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x33,
	0x0a, 0x09, 0x62, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x08, 0x62, 0x69, 0x64, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x69, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x38,
	0x0a, 0x04, 0x74, 0x61, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x61,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x61, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x49, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x49, 0x0a, 0x0a,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x73, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x51, 0x0a, 0x15, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x41, 0x0a, 0x0d, 0x73, 0x69,
	0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0c, 0x73, 0x69, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x41, 0x0a,
	0x0d, 0x74, 0x72, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x74, 0x72, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78,
	0x65, 0x66, 0x69, 0x6e, 0x6f, 0x2f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x2d, 0x61, 0x70,
	0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_protos_frontend_data_quote_proto_rawDescOnce sync.Once
	file_protos_frontend_data_quote_proto_rawDescData = file_protos_frontend_data_quote_proto_rawDesc
)

func file_protos_frontend_data_quote_proto_rawDescGZIP() []byte {
	file_protos_frontend_data_quote_proto_rawDescOnce.Do(func() {
		file_protos_frontend_data_quote_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_frontend_data_quote_proto_rawDescData)
	})
	return file_protos_frontend_data_quote_proto_rawDescData
}

var file_protos_frontend_data_quote_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_protos_frontend_data_quote_proto_goTypes = []interface{}{
	(*Quote)(nil),                        // 0: protos.frontend.data.Quote
	(*gopb.Decimal)(nil),                 // 1: protos.common.Decimal
	(gopb.Financial_Common_Tape)(0),      // 2: protos.common.Financial.Common.Tape
	(gopb.Financial_Quotes_Condition)(0), // 3: protos.common.Financial.Quotes.Condition
	(gopb.Financial_Quotes_Indicator)(0), // 4: protos.common.Financial.Quotes.Indicator
	(*gopb.UnixTimestamp)(nil),           // 5: protos.common.UnixTimestamp
}
var file_protos_frontend_data_quote_proto_depIdxs = []int32{
	1, // 0: protos.frontend.data.Quote.ask_price:type_name -> protos.common.Decimal
	1, // 1: protos.frontend.data.Quote.bid_price:type_name -> protos.common.Decimal
	2, // 2: protos.frontend.data.Quote.tape:type_name -> protos.common.Financial.Common.Tape
	3, // 3: protos.frontend.data.Quote.conditions:type_name -> protos.common.Financial.Quotes.Condition
	4, // 4: protos.frontend.data.Quote.indicators:type_name -> protos.common.Financial.Quotes.Indicator
	5, // 5: protos.frontend.data.Quote.participant_timestamp:type_name -> protos.common.UnixTimestamp
	5, // 6: protos.frontend.data.Quote.sip_timestamp:type_name -> protos.common.UnixTimestamp
	5, // 7: protos.frontend.data.Quote.trf_timestamp:type_name -> protos.common.UnixTimestamp
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_protos_frontend_data_quote_proto_init() }
func file_protos_frontend_data_quote_proto_init() {
	if File_protos_frontend_data_quote_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_frontend_data_quote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_frontend_data_quote_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_frontend_data_quote_proto_goTypes,
		DependencyIndexes: file_protos_frontend_data_quote_proto_depIdxs,
		MessageInfos:      file_protos_frontend_data_quote_proto_msgTypes,
	}.Build()
	File_protos_frontend_data_quote_proto = out.File
	file_protos_frontend_data_quote_proto_rawDesc = nil
	file_protos_frontend_data_quote_proto_goTypes = nil
	file_protos_frontend_data_quote_proto_depIdxs = nil
}
