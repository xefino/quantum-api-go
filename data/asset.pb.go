// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.20.3
// source: protos/frontend/data/asset.proto

package data

import (
	gopb "github.com/xefino/protobuf-gen-go/gopb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the fields on an asset that can be returned from one of our APIs
type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The symbol representing this asset (ex. AAPL, USDEUR, etc.)
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The name of the asset. This can be the company name for a ticker or a
	// currency pair for FX or crypto
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The type of the asset, in the case of a stock
	Type gopb.Financial_Common_AssetType `protobuf:"varint,3,opt,name=type,proto3,enum=protos.common.Financial_Common_AssetType" json:"type"` 
	// The class of the asset, showing whether or not the asset is a stock, foreign
	// exchange, crypto, option or OTC
	Market gopb.Financial_Common_AssetClass `protobuf:"varint,4,opt,name=market,proto3,enum=protos.common.Financial_Common_AssetClass" json:"market"` 
	// The locale in which the asset is available (US, global)
	Locale gopb.Financial_Common_Locale `protobuf:"varint,5,opt,name=locale,proto3,enum=protos.common.Financial_Common_Locale" json:"locale"` 
	// The currency the asset is traded with
	CurrencySymbol string `protobuf:"bytes,6,opt,name=currency_symbol,json=currencySymbol,proto3" json:"currency_symbol,omitempty"`
	// The name associated with the currency symbol. This value will be the same
	// as the currency symbol for stocks, OTC or indices
	CurrencyName string `protobuf:"bytes,7,opt,name=currency_name,json=currencyName,proto3" json:"currency_name,omitempty"`
	// The currency being traded for, in the case of foreign exchange or crypto. This
	// field will not be populated for stocks, OTC or indices
	BaseCurrencySymbol string `protobuf:"bytes,8,opt,name=base_currency_symbol,json=baseCurrencySymbol,proto3" json:"base_currency_symbol,omitempty"`
	// The name of the currency being traded for, in the case of foreign exchange or
	// crypto. This field will not be populated for stocks, OTC or indices
	BaseCurrencyName string `protobuf:"bytes,9,opt,name=base_currency_name,json=baseCurrencyName,proto3" json:"base_currency_name,omitempty"`
	// The date and time the ticker was delisted; this value may not be populated if
	// the asset is currently active
	DelistedUtc string `protobuf:"bytes,10,opt,name=delisted_utc,json=delistedUtc,proto3" json:"delisted_utc,omitempty"`
	// The ISO code of the primary listing exchange for this asset.
	PrimaryExchange string `protobuf:"bytes,11,opt,name=primary_exchange,json=primaryExchange,proto3" json:"primary_exchange,omitempty"`
	// The CIK number for this ticker.
	Cik string `protobuf:"bytes,12,opt,name=cik,proto3" json:"cik,omitempty"`
	// The composite OpenFIGI number for this ticker.
	CompositeFigi string `protobuf:"bytes,13,opt,name=composite_figi,json=compositeFigi,proto3" json:"composite_figi,omitempty"`
	// The share Class OpenFIGI number for this ticker.
	ShareClassFigi string `protobuf:"bytes,14,opt,name=share_class_figi,json=shareClassFigi,proto3" json:"share_class_figi,omitempty"`
	// A list of links that can be used to populate data associated with this asset
	Links []*Link `protobuf:"bytes,15,rep,name=links,proto3" json:"links"` 
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_frontend_data_asset_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_protos_frontend_data_asset_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_protos_frontend_data_asset_proto_rawDescGZIP(), []int{0}
}

func (x *Asset) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Asset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Asset) GetType() gopb.Financial_Common_AssetType {
	if x != nil {
		return x.Type
	}
	return gopb.Financial_Common_AssetType(0)
}

func (x *Asset) GetMarket() gopb.Financial_Common_AssetClass {
	if x != nil {
		return x.Market
	}
	return gopb.Financial_Common_AssetClass(0)
}

func (x *Asset) GetLocale() gopb.Financial_Common_Locale {
	if x != nil {
		return x.Locale
	}
	return gopb.Financial_Common_Locale(0)
}

func (x *Asset) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

func (x *Asset) GetCurrencyName() string {
	if x != nil {
		return x.CurrencyName
	}
	return ""
}

func (x *Asset) GetBaseCurrencySymbol() string {
	if x != nil {
		return x.BaseCurrencySymbol
	}
	return ""
}

func (x *Asset) GetBaseCurrencyName() string {
	if x != nil {
		return x.BaseCurrencyName
	}
	return ""
}

func (x *Asset) GetDelistedUtc() string {
	if x != nil {
		return x.DelistedUtc
	}
	return ""
}

func (x *Asset) GetPrimaryExchange() string {
	if x != nil {
		return x.PrimaryExchange
	}
	return ""
}

func (x *Asset) GetCik() string {
	if x != nil {
		return x.Cik
	}
	return ""
}

func (x *Asset) GetCompositeFigi() string {
	if x != nil {
		return x.CompositeFigi
	}
	return ""
}

func (x *Asset) GetShareClassFigi() string {
	if x != nil {
		return x.ShareClassFigi
	}
	return ""
}

func (x *Asset) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

var File_protos_frontend_data_asset_proto protoreflect.FileDescriptor

var file_protos_frontend_data_asset_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x05, 0x0a, 0x05, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x42, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x06, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x62, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x62, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x74,
	0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x64, 0x55, 0x74, 0x63, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69,
	0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x66,
	0x69, 0x67, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x65, 0x46, 0x69, 0x67, 0x69, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x66, 0x69, 0x67, 0x69, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x46, 0x69,
	0x67, 0x69, 0x12, 0x30, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x78, 0x65, 0x66, 0x69, 0x6e, 0x6f, 0x2f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x75,
	0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_frontend_data_asset_proto_rawDescOnce sync.Once
	file_protos_frontend_data_asset_proto_rawDescData = file_protos_frontend_data_asset_proto_rawDesc
)

func file_protos_frontend_data_asset_proto_rawDescGZIP() []byte {
	file_protos_frontend_data_asset_proto_rawDescOnce.Do(func() {
		file_protos_frontend_data_asset_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_frontend_data_asset_proto_rawDescData)
	})
	return file_protos_frontend_data_asset_proto_rawDescData
}

var file_protos_frontend_data_asset_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_protos_frontend_data_asset_proto_goTypes = []interface{}{
	(*Asset)(nil),                         // 0: protos.frontend.data.Asset
	(gopb.Financial_Common_AssetType)(0),  // 1: protos.common.Financial.Common.AssetType
	(gopb.Financial_Common_AssetClass)(0), // 2: protos.common.Financial.Common.AssetClass
	(gopb.Financial_Common_Locale)(0),     // 3: protos.common.Financial.Common.Locale
	(*Link)(nil),                          // 4: protos.frontend.data.Link
}
var file_protos_frontend_data_asset_proto_depIdxs = []int32{
	1, // 0: protos.frontend.data.Asset.type:type_name -> protos.common.Financial.Common.AssetType
	2, // 1: protos.frontend.data.Asset.market:type_name -> protos.common.Financial.Common.AssetClass
	3, // 2: protos.frontend.data.Asset.locale:type_name -> protos.common.Financial.Common.Locale
	4, // 3: protos.frontend.data.Asset.links:type_name -> protos.frontend.data.Link
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_protos_frontend_data_asset_proto_init() }
func file_protos_frontend_data_asset_proto_init() {
	if File_protos_frontend_data_asset_proto != nil {
		return
	}
	file_protos_frontend_data_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_frontend_data_asset_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_frontend_data_asset_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_frontend_data_asset_proto_goTypes,
		DependencyIndexes: file_protos_frontend_data_asset_proto_depIdxs,
		MessageInfos:      file_protos_frontend_data_asset_proto_msgTypes,
	}.Build()
	File_protos_frontend_data_asset_proto = out.File
	file_protos_frontend_data_asset_proto_rawDesc = nil
	file_protos_frontend_data_asset_proto_goTypes = nil
	file_protos_frontend_data_asset_proto_depIdxs = nil
}
